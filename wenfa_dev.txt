程序开始时初始化标识符总表类

符号表语义动作:
    1:设置当前变量type
    2:设置当前变量cat为v
    3:活动层级+1,实例化下一符号表层级,入符号表层级栈
    4:设置当前变量cat为f
    5:活动层级-1,弹出层级栈顶
    7:设置当前形参类型,种类vn
    8:当前活动标识符填信息入栈
    9:将活动符号表中形参依次填入函数表中
    10:查找当前token是否在当前层级出现

四元式语义动作:
    A:push(标识符)
	B:geq(call function)
	C:geq(return)
	D:geq(end if)
	E:geq(else)
	F:geq(if)
	G:geq(while)
	H:geq(逻辑运算表达式)
	K:pop(1)
	L:geq(parameter)
	M:geq(do)
	N:geq(end while)
	P:geq(end program)
	Q:geq(有定义但没有初始化的自定义变量)
    R:geq(赋值表达式)
    T:geq(program start)

非终极符推导:
    <源程序>
        <类型>1&10<标识符>4&8&T(3<形参列表>9){<语句列表>}P&5<源程序> |
        <类型>1&10<标识符>2&8<变量列表><赋值语句><源程序> |
        空
    
    <标识符>
        <函数标识符>A
        <非函数标识符>A
        <未定义标识符>A

    <形参列表>
        <类型>7&10<标识符>K&8<形参列表_后续> |
        空

    <形参列表_后续>
        ,<类型>7&10<标识符>K&8<形参列表_后续> |
        空

    <语句列表>
        <函数标识符>A (<参数列表>)B;<语句列表> |
        <非函数标识符>A<赋值语句><语句列表> |
        return <运算表达式>C;<语句列表> |
        <类型>1&10<标识符>2&8<变量列表><赋值语句><语句列表> |
        if (<逻辑表达式>)F {3<语句列表>}5 <else语句>D <语句列表> |
        while  G(<逻辑表达式>M) {3<语句列表>} N&5 <语句列表> |
        空

    <参数列表>
        <运算表达式>L<参数列表后续> |
        空

    <参数列表后续>
        ,<运算表达式>L<参数列表后续> |
        空

    <逻辑表达式>
        <运算表达式><逻辑运算符>A<运算表达式>H

    <赋值语句>
        =<运算表达式>;R | ;Q

    <else语句>
        else E{3<语句列表>}5 |
        空

    <变量列表>
        ,Q&10<标识符>2&8<变量列表> |
        空

    <运算表达式>
        <项> |
        <运算表达式><+->A<项> H

    <项>
        <因子> |
        <项><*/>A<因子>H

    <因子>
        <运算对象> |
        (<运算表达式>)

    <运算对象>
        <函数标识符>A(<参数列表>)B |
        <非函数标识符> A|
        <常数>A

终极符: 
    <函数标识符>
    <未定义标识符>
    <常数>
    <+->
    <*/>
    <非函数标识符>
    <逻辑运算符>
        > | < | >= | <= | ==
    <类型>
        int| char| float| bool

非终极符:
    <标识符>
    <源程序>
    <形参列表>
    <形参列表_后续>
    <参数列表后续>
    <语句列表>
    <逻辑表达式>
    <赋值语句>
    <else语句>
    <变量列表>
    <运算表达式>
    <项>
    <因子>
    <运算对象>
    <参数列表>
